% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/bestSubset.r
\name{bestSubset}
\alias{bestSubset}
\title{Best modeling subset}
\usage{
bestSubset(dv, ivs, buildModel, fitnessMetric, likelihoodFn,
  minimize_fitness_metric = T, n_generations = 100, n_genes = 50,
  mutation_rate = 0.01, elitism_rate = 0.01, VERBOSE = FALSE, ...)
}
\arguments{
\item{dv}{A vector or matrix of dependent variable(s) for the model.}

\item{ivs}{A matrix containing the indepdendent variables on which the model is to be based.}

\item{buildModel}{A function which actually creates the model such as lm().}

\item{fitnessMetric}{A function taking the model built by buildModel and returns a numeric value specifying a model's fitness -- e.g. the model's variance, R^2, or AUC.  In Darwinian terms, metric will be used to determine the "fitness" of the model to survive and procreate.}

\item{likelihoodFn}{A function which takes the fitness metrics created by fitnessMetric and provides the probability of that fitness metric being selected for the next generation.  The two likelihood functions invLog() and squared() are examples provided to choose smaller and larger values, respectively.}

\item{minimize_fitness_metric}{This parameter specifies whether the fitness metric is to be minimized (TRUE) or maximized (FALSE).}

\item{n_generations}{The maximum number of generations to run the simulation.}

\item{n_genes}{The number of independent "organisms" to create in every generation for crossover or breeding.}

\item{mutation_rate}{The percentage chance for every variable to be flipped after crossover.  Higher values give higher volatility between generations and vice versa.}

\item{elitism_rate}{The rate at which best performers are to be kept, in order to prevent regression between generations.  The top elitism_rate percent will be preserved unchanged.}

\item{VERBOSE}{This parameter will provide output as to the progress.  The default, FALSE, will output none.}

\item{...}{Any parameters needed to be passed to the given buildModel function can be added here.}
}
\value{
The function returns a vector containing the columns of the independent variables to use in the best subset found.
}
\description{
This function attempts to optimize a subset of variables for modeling based on given criteria with a genetic algorithm.  The use case is intended for situations where stepwise variable selection is either not likely to result in the best model or is impractical.
}
\examples{
modelSigma <- function(fitted_model) {
    summary(fitted_model)$sigma
}

# Minimize the error variance of a linear model for given data
min_subset <- bestSubset(my_response, my_data, buildModel=lm,
                         fitnessMetric=modelSigma, likelihoodFn=invLog,
                         n_generations=250, n_genes=50, mutation_rate=0.005)

# Take only the columns specified by bestSubset()
selected_data <- my_data[, min_subset]
best_model <- lm(dv ~ ., data=selected_data)
}

